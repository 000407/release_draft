name: Mimic Build Process Init

on:
  push:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - id: build
      run: |
        git config user.name "${{ github.actor }}-bot" && git config user.email "${{ github.actor }}@users.noreply.gihub.com"
        git fetch origin
        if branchrev=$(git rev-parse -q --verify origin/release/next); then
          git pull origin release/next --allow-unrelated-histories
        fi
        git checkout release/next 2>/dev/null || git checkout -b release/next
        git merge master
        rm -rf build
        mkdir -p ./build && cp *.txt ./build/
        if ! git diff-index --quiet HEAD --; then
          git add .
          git commit -m "Commit:Build Output"
          git push origin release/next
        fi
        
        if [ ! -f ./.RELEASE_LOCK ]; then
          echo '::set-output name=MAKE_PR::1'
        fi
        
    - name: Create Pull Request
      id: create_pull
      if: steps.build.outputs.MAKE_PR == '1'
      run: |
        url=$(gh pr create \
          -B "master" \
          -H "release/next" \
          -b "PR Body" \
          -t "Next Release")
        echo "::set-output name=pr_url::$url"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Check outputs & Create RELEASE_LOCK
      id: release_lock
      if: steps.build.outputs.MAKE_PR == '1'
      run: |
        git config user.name "${{ github.actor }}-bot" && git config user.email "${{ github.actor }}@users.noreply.gihub.com"
        git fetch origin
        if branchrev=$(git rev-parse -q --verify origin/release/next); then
          git pull origin release/next --allow-unrelated-histories
        fi
        git checkout release/next 2>/dev/null || git checkout -b release/next
        git merge master
        
        echo "${{ steps.create_pull.outputs.pr_url }}" > ./.RELEASE_LOCK
        
        ls -al | grep RELEASE_LOCK
        
        if ! git diff-index --quiet HEAD --; then
          git add .
          git commit -m "Commit:Release Lock File"
          git push origin release/next
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
